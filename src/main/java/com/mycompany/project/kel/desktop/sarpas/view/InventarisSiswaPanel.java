/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.project.kel.desktop.sarpas.view;

import com.mycompany.project.kel.desktop.sarpas.model.Barang;
import com.mycompany.project.kel.desktop.sarpas.dao.BarangDAO;
import java.awt.Font; 
import javax.swing.JPanel;

import javax.swing.JTable;      
import javax.swing.table.DefaultTableModel; 
import javax.swing.JLabel;     
import javax.swing.BoxLayout;   
import java.awt.BorderLayout;   
import java.awt.FlowLayout;     

import java.util.List;
import java.awt.Color; 


import java.util.List;
import java.awt.Color;
/**
 *
 * @author AXIOO
 */
public class InventarisSiswaPanel extends javax.swing.JPanel {
 
     private DefaultTableModel tableModel; // Variabel kelas untuk model tabel
    private BarangDAO barangDAO; // Objek 
    /**
     * Creates new form InventarisSiswaPanel
     */
    public InventarisSiswaPanel() {
         initComponents(); // Ini memanggil kode yang dihasilkan GUI Builder
        
        System.out.println("DEBUG - InventarisSiswaPanel: Constructor dimulai."); 
         setupSearchComponents();
        this.barangDAO = new BarangDAO(); // Inisialisasi DAO

        // --- INI BARIS KRUSIAL UNTUK MENGHUBUNGKAN tableModel ---
        // tableModel akan mengambil model yang sudah diatur oleh initComponents()
       
        tableModel = (DefaultTableModel) tblInventaris.getModel(); 
        
        System.out.println("DEBUG - InventarisSiswaPanel: tableModel berhasil dihubungkan. Jumlah kolom: " + tableModel.getColumnCount());

        loadBarangData(); // Muat data barang dari database
        System.out.println("DEBUG - InventarisSiswaPanel: loadBarangData() selesai.");
        
        // setupRoleBasedAccess() tidak lagi diperlukan di sini karena tidak ada tombol untuk diatur
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtCariBarang = new javax.swing.JTextField();
        btnCari = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInventaris = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        txtCariBarang.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtCariBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariBarangActionPerformed(evt);
            }
        });

        btnCari.setBackground(new java.awt.Color(204, 204, 204));
        btnCari.setIcon(new javax.swing.ImageIcon("C:\\Users\\AXIOO\\Documents\\NetBeansProjects\\Project-kel-6-desktop-sarpas\\src\\main\\java\\img\\img\\iconcari.png")); // NOI18N

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblInventaris.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        tblInventaris.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nama barang", "ID Kategori", "Kode Barang", "Jumlah Total", "Kondisi", "Jumlah Tersedia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblInventaris);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(txtCariBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCari, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(753, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 927, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCariBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCari, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void txtCariBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCariBarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCariBarangActionPerformed

  
  
  
   public void loadBarangData() {
        tableModel.setRowCount(0); // Bersihkan baris yang ada
        
        System.out.println("DEBUG - loadBarangData: Memanggil barangDAO.getAllBarang()...");
        List<Barang> daftarBarang = barangDAO.getAllBarang(); 

        if (daftarBarang != null) {
            System.out.println("DEBUG - loadBarangData: Jumlah barang dari DB: " + daftarBarang.size());
            if (!daftarBarang.isEmpty()) {
                for (Barang barang : daftarBarang) {
                   tableModel.addRow(new Object[]{
    barang.getNamaBarang(),
    barang.getIdKategori(),
    barang.getKodeBarang(),
    barang.getJumlahTotal(),
    barang.getKondisi(),
    barang.getJumlahTersedia() 
});
                }
                System.out.println("DEBUG - loadBarangData: " + tableModel.getRowCount() + " baris ditambahkan ke tabel.");
            } else {
                System.out.println("DEBUG - loadBarangData: Database mengembalikan daftar barang kosong.");
            }
        } else {
            System.out.println("DEBUG - loadBarangData: barangDAO.getAllBarang() mengembalikan NULL.");
        }
    }
          
   
     private void setupSearchComponents() {
        // harus menambahkan komponen txtCariBarang dan btnCari secara visual
        // di NetBeans GUI builder. Kemudian, pastikan nama variabelnya sesuai.
        // Kode ini hanya untuk memastikan action listener terpasang.

        // Jika ingin pencarian instan saat mengetik:
        txtCariBarang.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                performSearch();
            }
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                performSearch();
            }
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                performSearch();
            }
        });
    }

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {
        performSearch();
    }

    private void performSearch() {
        String keyword = txtCariBarang.getText().trim();
        loadBarangData(keyword);
    }

    private void loadBarangData(String keyword) {
        DefaultTableModel model = (DefaultTableModel) tblInventaris.getModel(); 
        model.setRowCount(0); 

        List<Barang> daftarBarang;
        if (keyword.isEmpty()) {
            daftarBarang = barangDAO.getAllBarang();
        } else {
            daftarBarang = barangDAO.searchBarang(keyword); 
        }

        for (Barang barang : daftarBarang) {
            model.addRow(new Object[]{
                 barang.getNamaBarang(),     // 1. Nama barang
                        barang.getIdKategori(),     // 2. ID Kategori
                        barang.getKodeBarang(),     // 3. Kode Barang
                        barang.getJumlahTotal(),    // 4. Jumlah Total
                        barang.getKondisi(),
                        barang.getJumlahTersedia()
                
                // Tambahkan kolom lain sesuai model tabel 
            });
        }
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblInventaris;
    private javax.swing.JTextField txtCariBarang;
    // End of variables declaration//GEN-END:variables
}
