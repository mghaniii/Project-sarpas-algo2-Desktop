/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.project.kel.desktop.sarpas.view;

import com.mycompany.project.kel.desktop.sarpas.dao.LaporanKerusakanDAO;
import com.mycompany.project.kel.desktop.sarpas.model.LaporanKerusakan;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.ImageIcon; 
import java.awt.Image; 

/**
 *
 * @author AXIOO
 */
public class LaporanKerusakanAdminPanel extends javax.swing.JPanel {
 private LaporanKerusakanDAO laporanDAO;
    private DefaultTableModel tableModel;
    private int selectedLaporanId = -1; // Untuk menyimpan ID laporan yang dipilih
    /**
     * Creates new form LaporanKerusakanAdminPanel
     */
   public LaporanKerusakanAdminPanel() {
        initComponents(); // Panggilan standar dari NetBeans

        // Inisialisasi DAO dan model tabel
        this.laporanDAO = new LaporanKerusakanDAO();
        this.tableModel = (DefaultTableModel) tblLaporan.getModel();

        // Muat data dan atur listener
        loadLaporanData();
        setupListeners();

        // Atur kondisi awal tombol (non-aktif)
        updateButtonState(false);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblLaporan = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnProses = new com.mycompany.project.kel.desktop.sarpas.view.RoundedButton();
        btnSelesai = new com.mycompany.project.kel.desktop.sarpas.view.RoundedButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDeskripsi = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        lblFotoPreview = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblLaporan.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        tblLaporan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Laporan", "Nama Barang", "Lokasi", "Kode Barang", "Pelapor", "Tanggal", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblLaporan);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btnProses.setBackground(new java.awt.Color(0, 153, 204));
        btnProses.setForeground(new java.awt.Color(255, 255, 255));
        btnProses.setText("Proses");
        btnProses.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnSelesai.setBackground(new java.awt.Color(0, 153, 204));
        btnSelesai.setForeground(new java.awt.Color(255, 255, 255));
        btnSelesai.setText("Tandai Selesai");
        btnSelesai.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtDeskripsi.setEditable(false);
        txtDeskripsi.setColumns(20);
        txtDeskripsi.setRows(5);
        txtDeskripsi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane2.setViewportView(txtDeskripsi);

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel2.setText("Keterangan");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSelesai, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                            .addComponent(btnProses, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(jLabel2)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnProses, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSelesai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        lblFotoPreview.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblFotoPreview.setText("klik baris tabel melihat foto");
        lblFotoPreview.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel1.setText("Laporan Kerusakan");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblFotoPreview, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFotoPreview, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(67, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
 private void loadLaporanData() {
        // Kosongkan tabel sebelum diisi
        tableModel.setRowCount(0);

        List<LaporanKerusakan> daftarLaporan = laporanDAO.getAllLaporanKerusakan();

        for (LaporanKerusakan laporan : daftarLaporan) {
            // Tambahkan baris baru ke tabel
            // Urutan harus sesuai dengan kolom di JTable 
            tableModel.addRow(new Object[]{
    laporan.getIdLaporan(),
    laporan.getNamaBarang(),
    laporan.getLokasiAlat(),
    laporan.getKodeBarang(),
    laporan.getNamaPelapor(),
    laporan.getTanggalPelaporan(),
    laporan.getStatusLaporan() // <-- INI YANG SUDAH DIPERBAIKI
});
        }
    }
 
 
   private void setupListeners() {
        // Listener untuk JTable, akan aktif saat sebuah baris dipilih
        tblLaporan.getSelectionModel().addListSelectionListener(e -> {
            // Pastikan event ini tidak berjalan saat mouse masih digeser
            if (!e.getValueIsAdjusting() && tblLaporan.getSelectedRow() != -1) {
                int selectedRow = tblLaporan.getSelectedRow();
                
                // Ambil ID Laporan dari kolom pertama (indeks 0)
                selectedLaporanId = (int) tableModel.getValueAt(selectedRow, 0);

                // Ambil deskripsi kerusakan untuk ditampilkan di JTextArea
                // Untuk ini, kita perlu mengambil objek LaporanKerusakan yang sesuai
                LaporanKerusakan selectedLaporan = getSelectedLaporanFromList(selectedLaporanId);
                if (selectedLaporan != null) {
                    txtDeskripsi.setText(selectedLaporan.getDeskripsiKerusakan());
                     displayFoto(selectedLaporan.getUrlFotoKerusakan());
                    
                }

                // Aktifkan tombol karena ada baris yang dipilih
                updateButtonState(true);
            }
        });

        // Listener untuk tombol "Proses"
        btnProses.addActionListener(e -> updateStatus("Diproses"));

        // Listener untuk tombol "Selesai"
        btnSelesai.addActionListener(e -> updateStatus("Selesai"));
    }

   
   private void displayFoto(String fotoPath) {
        if (fotoPath != null && !fotoPath.isEmpty()) {
            try {
                // Buat ImageIcon dari alamat file
                ImageIcon originalIcon = new ImageIcon(fotoPath);
                
                // Dapatkan ukuran JLabel untuk penyesuaian
                int labelWidth = lblFotoPreview.getWidth();
                int labelHeight = lblFotoPreview.getHeight();
                
                // Ubah ukuran gambar agar pas di dalam JLabel
                Image resizedImage = originalIcon.getImage().getScaledInstance(labelWidth, labelHeight, Image.SCALE_SMOOTH);
                
                // Pasang gambar yang sudah diubah ukurannya ke JLabel
                lblFotoPreview.setIcon(new ImageIcon(resizedImage));
                lblFotoPreview.setText(""); // Hapus teks placeholder
            } catch (Exception e) {
                // Jika file tidak ditemukan atau error saat memuat
                lblFotoPreview.setIcon(null);
                lblFotoPreview.setText("Gagal memuat foto");
                System.err.println("Error memuat gambar: " + e.getMessage());
            }
        } else {
            // Jika tidak ada path foto di database
            lblFotoPreview.setIcon(null);
            lblFotoPreview.setText("Tidak ada foto");
        }
    }
   
   
   
   private LaporanKerusakan getSelectedLaporanFromList(int id) {
        // Kita ambil lagi listnya agar data selalu fresh
        List<LaporanKerusakan> daftarLaporan = laporanDAO.getAllLaporanKerusakan();
        for(LaporanKerusakan laporan : daftarLaporan) {
            if(laporan.getIdLaporan() == id) {
                return laporan;
            }
        }
        return null;
    }

    /**
     * Mengupdate status laporan berdasarkan status baru yang diberikan.
     * @param newStatus Status baru ("Diproses" atau "Selesai").
     */
    private void updateStatus(String newStatus) {
        if (selectedLaporanId == -1) {
            JOptionPane.showMessageDialog(this, "Pilih sebuah laporan terlebih dahulu.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        boolean success = laporanDAO.updateLaporanStatus(selectedLaporanId, newStatus);

        if (success) {
            JOptionPane.showMessageDialog(this, "Status laporan berhasil diubah menjadi '" + newStatus + "'.", "Sukses", JOptionPane.INFORMATION_MESSAGE);
            loadLaporanData(); // Muat ulang data tabel agar statusnya terupdate
            resetFormState(); // Kembalikan ke kondisi awal
        } else {
            JOptionPane.showMessageDialog(this, "Gagal mengupdate status laporan.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * Mengaktifkan atau menonaktifkan tombol aksi.
     * @param isEnabled true untuk aktif, false untuk non-aktif.
     */
    private void updateButtonState(boolean isEnabled) {
        btnProses.setEnabled(isEnabled);
        btnSelesai.setEnabled(isEnabled);
    }
    
    /**
     * Mengembalikan panel ke kondisi awal (tidak ada baris terpilih).
     */
    private void resetFormState() {
        tblLaporan.clearSelection();
        txtDeskripsi.setText("");
        selectedLaporanId = -1;
        updateButtonState(false);
        
         lblFotoPreview.setIcon(null);
        lblFotoPreview.setText("Pilih laporan untuk melihat foto");
        
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProses;
    private javax.swing.JButton btnSelesai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblFotoPreview;
    private javax.swing.JTable tblLaporan;
    private javax.swing.JTextArea txtDeskripsi;
    // End of variables declaration//GEN-END:variables
}
